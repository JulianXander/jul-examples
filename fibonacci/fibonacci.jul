# jul fibonacci.jul
# node fibonacci.js

# int fib(int term, int val = 1, int prev = 0)
# {
#  if(term == 0) return prev;
#  return fib(term - 1, val+prev, val);
# }
fibonacciHelper = (
	countdown: Integer
	current: Integer
	previous: Integer
) =>
	countdown ?
		0 => previous
		() => fibonacciHelper(subtract(countdown 1) sum(current previous) current)
fibonacci = (x: Integer) =>
	fibonacciHelper(x 1 0)

# fibonacciHelper = (n fibMinus1) =>
# 	n ?
# 		(x: 1) => (1 0)
# 		() => 
# 			(prev fibMinus2) = fibonacciHelper(subtract(n 1) )
# 			(prev sum(fibMinus1 fibMinus2))

test = fibonacci(12)
log(test)